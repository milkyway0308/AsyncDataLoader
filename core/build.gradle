plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id 'maven-publish'
    id 'java'
}


repositories {
    mavenCentral()
    jcenter()
    maven {
        url = uri(rootProject.properties["reposilite.release"])
    }

    maven {
        url = uri(rootProject.properties["reposilite.spigot"])
    }
}

dependencies {
    compileOnly group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.4.32'
    compileOnly group: 'org.spigotmc', name: 'spigot', version: '1.12.2'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.2'
    testImplementation(project(":core"))
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.2'
}

test {
    useJUnitPlatform()
}

jar {
    baseName "AsyncDataLoader-${project.name.capitalize()}"
}

processResources {
    filesMatching(["loaderDeclaration.properties", "plugin.yml"]*.toString()) {
        expand(["version": rootProject.properties["version"] as String])
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

publishing {
    repositories {
        maven {
            name = "Reposilite"
            url(rootProject.properties["snapshot"] as Boolean ? rootProject.properties['reposilite.snapshot'] as String : rootProject.properties['reposilite.release'] as String)
            credentials {
                username rootProject.properties['reposilite.user'] as String
                password rootProject.properties['reposilite.token'] as String
            }
        }
    }
    publications {
        create("jar", MavenPublication) {
            groupId 'skywolf46'
            artifactId "${rootProject.name.toLowerCase()}-${project.name}"
            version rootProject.properties['version'] as String
            from components.java
        }
    }
}

